await page.waitForLoadState('networkidle');

await page.pause();

// Element's text content must be exactly 'New Design'
await expect(page.locator('#add-new-project-btn')).toHaveText('New Design');

// Element's text content must contain 'New Design' as a substring
await expect(page.locator('#add-new-project-btn')).toContainText('New Design');

// Input's  used to search for the element with Value
await expect(page.locator('input[name="first_name"]')).toHaveValue('Daria');
//URL 
await expect(page.url).toContain('https://ucl-coolab-dev.uk.r.appspot.com/projects/');

//Hover
await page.locator('#add-new-project-btn').hover();

// you can create an array with the text content of each <a> element inside the <li> 
// elements with the class rounded-lg. You can use the evaluateAll method to extract 
// the text content from the elements. Here is how you can do it:
await expect(page.locator('h4')).toContainText('styles');

const styles = page.locator('#genres-list > li.rounded-lg');
const stylesCount = await styles.count();
console.log(`Number of styles: ${stylesCount}`);

if (stylesCount > 0) {
    const stylesTextArray = await styles.evaluateAll(elements => 
        elements.map(element => element.querySelector('a').textContent.trim())
    );
    console.log(stylesTextArray);
} else {
    console.log('No elements found with the class .rounded-lg');
}
